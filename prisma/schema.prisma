generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String        @id @default(auto()) @map("_id") @db.ObjectId
  nome                    String
  email                   String?     @unique
  password                String?
  curso                   String?
  turma                   String?
  datadenascimento        String?
  telefone                String?
  sexo                    String?
  profissao               String?
  cpf                     String?
  estCivil                String?
  observacoes             String?
  nomePai                 String?
  nomeMae                 String?
  endereco                Endereco?
  matricula               String?
  createdAt               DateTime      @default(now())
  role                    Role //professor, aluno, paciente, profissional
  agendamento             Agendamento[] @relation("paciente")
  agendamentoProfissional Agendamento[] @relation("profissional")
  agendamentoProfessor    Agendamento[] @relation("professor")

  prontuarioPaciente Prontuario[] @relation("prontuario_paciente")
  prontuarioAluno    Prontuario[] @relation("prontuario_aluno")
}

enum Role {
  professor
  aluno
  paciente
  profissional
}

type Endereco {
  cidade String
  rua    String
  bairro String
  numero Int
}

model Clinica {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  endereco    Endereco
  tipo        String //psico, odonto, fisio
  createdAt   DateTime      @default(now())
  agendamento Agendamento[] @relation("clinica")
}

model Agendamento {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  dia            String
  horaInicio     String
  horaFim        String
  pacienteId     String  @db.ObjectId
  profissionalId String  @db.ObjectId
  professorId    String  @db.ObjectId
  clinicaId      String  @db.ObjectId
  paciente       User    @relation(fields: [pacienteId], references: [id], name: "paciente")
  profissional   User    @relation(fields: [profissionalId], references: [id], name: "profissional")
  professor      User    @relation(fields: [professorId], references: [id], name: "professor")
  clinica        Clinica @relation(fields: [clinicaId], references: [id], name: "clinica")
}

model Prontuario {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  pacienteId String @db.ObjectId
  paciente   User   @relation(fields: [pacienteId], references: [id], name: "prontuario_paciente")
  alunoId    String @db.ObjectId
  aluno      User   @relation(fields: [alunoId], references: [id], name: "prontuario_aluno")
}
